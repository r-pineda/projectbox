"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var router_1 = require("@angular/router");
var router_2 = require("nativescript-angular/router");
var page_1 = require("ui/page");
var status_service_1 = require("../../shared/status/status.service");
var todo_service_1 = require("../../shared/todo/todo.service");
var TodoComponent = (function () {
    //Ebene 1 des Arrays ist assoziativ mit den IDs von den Todos. die 2. Ebene enth√§lt folgende Attribute:
    //[0]startTime: Stunden
    //[1]startTime: Minuten
    //[2]startTime: Sekunden
    //[3]endTime: Stunden
    //[4]endTime: Minuten
    //[5]endTime: Sekunden
    //[6]errechnete dauer des Eintrags
    //[7]TimerRunning :0 = false, 1 = true
    function TodoComponent(router, routerExtensions, activatedRoute, statusService, todoService, page) {
        this.router = router;
        this.routerExtensions = routerExtensions;
        this.activatedRoute = activatedRoute;
        this.statusService = statusService;
        this.todoService = todoService;
        this.page = page;
        page.actionBarHidden = true;
    }
    TodoComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.todos = this.todoService.todosDummy();
        this.temp = new Array(this.todos.length);
        this.todos.forEach(function (element) {
            _this.temp[element.id] = [];
            _this.temp[element.id][6] = element.timeTaken;
            _this.temp[element.id][7] = 0;
        });
    };
    TodoComponent.prototype.saveTime = function (id) {
        var _this = this;
        console.dir(this.temp);
        this.todos.forEach(function (todo) {
            if (id == todo.id) {
                var sec = ((_this.temp[id][3] * 3600) + (_this.temp[id][4] * 60) + +_this.temp[id][5])
                    - ((_this.temp[id][0] * 3600) + (_this.temp[id][1] * 60) + +_this.temp[id][2]);
                sec -= sec % 60;
                todo.timeTaken += (sec / 60);
            }
        });
    };
    TodoComponent.prototype.play_stop = function (id) {
        if (this.temp[id][7] == 0) {
            this.temp[id][7] = 1;
            var date = new Date();
            this.temp[id][0] = date.getHours();
            this.temp[id][1] = date.getMinutes();
            this.temp[id][2] = date.getSeconds();
        }
        else {
            this.temp[id][7] = 0;
            var date = new Date();
            this.temp[id][3] = date.getHours();
            this.temp[id][4] = date.getMinutes();
            this.temp[id][5] = date.getSeconds();
            this.saveTime(id);
            console.dir(this.temp);
        }
    };
    TodoComponent = __decorate([
        core_1.Component({
            selector: "my-app",
            providers: [todo_service_1.TodoService, status_service_1.StatusService],
            templateUrl: "pages/todo/todo.html",
            styleUrls: ["pages/todo/todo-common.css", "pages/todo/todo.css"]
        }),
        __metadata("design:paramtypes", [router_1.Router,
            router_2.RouterExtensions,
            router_1.ActivatedRoute,
            status_service_1.StatusService,
            todo_service_1.TodoService,
            page_1.Page])
    ], TodoComponent);
    return TodoComponent;
}());
exports.TodoComponent = TodoComponent;
//# sourceMappingURL=data:application/json;base64,