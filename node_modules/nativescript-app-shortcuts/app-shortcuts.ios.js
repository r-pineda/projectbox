"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("tns-core-modules/utils/utils");
var application_1 = require("tns-core-modules/application");
var quickActionCallback = null;
var lastQuickAction = null;
var callback = function (application, shortcutItem, completionHandler) {
    if (quickActionCallback !== null) {
        quickActionCallback(shortcutItem);
    }
    else {
        lastQuickAction = shortcutItem;
    }
};
var AppShortcutsUIApplicationDelegate = (function (_super) {
    __extends(AppShortcutsUIApplicationDelegate, _super);
    function AppShortcutsUIApplicationDelegate() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AppShortcutsUIApplicationDelegate.prototype.applicationPerformActionForShortcutItemCompletionHandler = function (application, shortcutItem, completionHandler) {
        callback(application, shortcutItem, completionHandler);
    };
    return AppShortcutsUIApplicationDelegate;
}(UIResponder));
AppShortcutsUIApplicationDelegate.ObjCProtocols = [UIApplicationDelegate];
(function () {
    if (application_1.ios.delegate !== undefined) {
        application_1.ios.delegate.prototype.applicationPerformActionForShortcutItemCompletionHandler = callback;
    }
    else {
        application_1.ios.delegate = AppShortcutsUIApplicationDelegate;
    }
})();
var AppShortcuts = (function () {
    function AppShortcuts() {
        this.availability = null;
    }
    AppShortcuts.prototype.avail = function () {
        if (this.availability === null) {
            var avail = false;
            if (utils_1.ios.MajorVersion >= 9) {
                avail = 2 === application_1.ios.nativeApp.keyWindow.rootViewController.traitCollection.forceTouchCapability;
            }
            this.availability = avail;
        }
        return this.availability;
    };
    AppShortcuts.prototype.available = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            resolve(_this.avail());
        });
    };
    AppShortcuts.prototype.setQuickActionCallback = function (callback) {
        quickActionCallback = callback;
        if (lastQuickAction !== null) {
            quickActionCallback(lastQuickAction);
            lastQuickAction = null;
        }
    };
    AppShortcuts.prototype.configureQuickActions = function (actions) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            if (!_this.avail()) {
                reject("3D Touch not available");
                return;
            }
            var items = [];
            actions.map(function (action) {
                var uiApplicationShortcutIcon = null;
                if (action.iconType) {
                    uiApplicationShortcutIcon = UIApplicationShortcutIcon.iconWithType(action.iconType);
                }
                else if (action.iconTemplate) {
                    uiApplicationShortcutIcon = UIApplicationShortcutIcon.iconWithTemplateImageName(action.iconTemplate);
                }
                items.push(UIApplicationShortcutItem.alloc().initWithTypeLocalizedTitleLocalizedSubtitleIconUserInfo(action.type, action.title, action.subtitle, uiApplicationShortcutIcon, null));
            });
            application_1.ios.nativeApp.shortcutItems = items;
            resolve();
        });
    };
    return AppShortcuts;
}());
exports.AppShortcuts = AppShortcuts;
//# sourceMappingURL=app-shortcuts.ios.js.map